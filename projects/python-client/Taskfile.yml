version: '3'

includes:

vars:
  PYTHON: poetry run python
  PYTEST: "{{.PYTHON}} -m pytest"

  POETRY_SKIP_INSTALL: ""

  # assign defaults to our test configurations
  ## for use by e2e + cypress
  DP_TEST_SERVER: '{{.DP_TEST_SERVER | default "http://localhost:8090"}}'
  DP_TEST_TOKEN: '{{.DP_TEST_TOKEN | default ""}}'
  ## for use by cypress
  DP_TEST_PASSWORD: '{{.DP_TEST_PASSWORD | default ""}}'
  DP_STAFF_PASSWORD: '{{.DP_STAFF_PASSWORD | default ""}}'

env:

tasks:
  install:
    desc: "Install dependencies ready for development on the codebase"
    deps: [system-check]
    run: once
    cmds:
      - cmd: poetry install -E plotting -E cloud
    status:
      - test -n "$POETRY_SKIP_INSTALL"

  test:
    desc: "Run self-contained tests"
    deps: [install]
    cmds:
      - cmd: "{{.PYTEST}} -v --ignore=tests/client/e2e/ tests"
      - cmd: "{{.PYTEST}} -v tests_toplevel"

  test:e2e:public:
    desc: "Run all the e2e tests relating to the 'public' focused APIs"
    deps: [install]
    cmds:
      - cmd: "{{.PYTEST}} tests/client/e2e/ -m 'not org'"
    env: &e2e-env
      DP_TEST_SERVER: '{{.DP_TEST_SERVER}}'
      DP_TEST_TOKEN: '{{.DP_TEST_TOKEN}}'
      DP_TEST_PASSWORD: '{{.DP_TEST_PASSWORD}}'
      DP_STAFF_PASSWORD: '{{.DP_STAFF_PASSWORD}}'

  test:e2e:org:
    desc: "Run all the e2e tests relating to the 'Org' focused APIs"
    deps: [install]
    cmds:
      - cmd: "{{.PYTEST}} tests/client/e2e/"
    env: *e2e-env

  system-check:
    desc: Run checks to make sure you're ready for development
    cmds:
      - task: system-check:poetry

  system-check:poetry:
    run: once
    preconditions:
      - sh: command -v poetry
        msg: >-
          Poetry needs installing on your system: ->
          https://python-poetry.org/docs/master/#installing-with-the-official-installer
