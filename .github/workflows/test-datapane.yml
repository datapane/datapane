name: Test [Datapane]

on:
  # Run on any push to master and all PRs (any branch) that cover the python-client
  push:
    branches: [ master ]
    paths:
      - 'projects/python-client/**'
      - '.github/actions/**'
      - '.github/workflows/test-datapane.yml'
  pull_request:
    paths:
      - 'projects/python-client/**'
      - '.github/actions/**'
      - '.github/workflows/test-datapane.yml'

jobs:
  datapane-multi-env:
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Enable symlinks on Windows
        run: git config --global core.symlinks true
        if: startsWith(runner.os, 'Windows')
      - uses: actions/checkout@v3
        with:
          lfs: true
      - name: Set up Python ${{ matrix.python-version }}
        uses: .github/actions/base-python
        with:
          python-version: ${{ matrix.python-version }}

      - name: Dump Runner Info
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: |
          echo "${RUNNER_CONTEXT}"
          which python

      - name: Configure Poetry Environment
        uses: .github/actions/poetry-env
        with:
          working-directory: ./projects/python-client/
          python-version: ${{ matrix.python-version }}
          install-args: -E plotting -E cloud

      - name: Run Tests
        working-directory: ./projects/python-client/
        run: |
          pip install "poetry>=1.1.0,<1.2.0"
          poetry config virtualenvs.in-project true
          # rmdir --ignore-fail-on-non-empty -v .venv
          poetry install -E plotting -E cloud
          # Run the type checker
          poetry run python -m mypy src/
          # run CLI tests (junit tests not captured yet)
          poetry run python -m pytest -v --ignore=tests/client/e2e/ tests --junitxml=${{github.workspace}}/test-reports/datapane-local-${{ matrix.os }}-${{ matrix.python-version }}.xml
          # run top-level CLI tests (junit tests not captured yet)
          poetry run python -m pytest -v tests_toplevel --junitxml=${{github.workspace}}/test-reports/datapane-local-toplevel-${{ matrix.os }}-${{ matrix.python-version }}.xml
